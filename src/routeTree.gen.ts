/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WeaponIndexRouteImport } from './routes/weapon/index'
import { Route as MainGameIndexRouteImport } from './routes/main-game/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as classIndexRouteImport } from './routes/(class)/index'

const WeaponIndexRoute = WeaponIndexRouteImport.update({
  id: '/weapon/',
  path: '/weapon/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainGameIndexRoute = MainGameIndexRouteImport.update({
  id: '/main-game/',
  path: '/main-game/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const classIndexRoute = classIndexRouteImport.update({
  id: '/(class)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof classIndexRoute
  '/login': typeof LoginIndexRoute
  '/main-game': typeof MainGameIndexRoute
  '/weapon': typeof WeaponIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof classIndexRoute
  '/login': typeof LoginIndexRoute
  '/main-game': typeof MainGameIndexRoute
  '/weapon': typeof WeaponIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(class)/': typeof classIndexRoute
  '/login/': typeof LoginIndexRoute
  '/main-game/': typeof MainGameIndexRoute
  '/weapon/': typeof WeaponIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/main-game' | '/weapon'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/main-game' | '/weapon'
  id: '__root__' | '/(class)/' | '/login/' | '/main-game/' | '/weapon/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  classIndexRoute: typeof classIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  MainGameIndexRoute: typeof MainGameIndexRoute
  WeaponIndexRoute: typeof WeaponIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/weapon/': {
      id: '/weapon/'
      path: '/weapon'
      fullPath: '/weapon'
      preLoaderRoute: typeof WeaponIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main-game/': {
      id: '/main-game/'
      path: '/main-game'
      fullPath: '/main-game'
      preLoaderRoute: typeof MainGameIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(class)/': {
      id: '/(class)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof classIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  classIndexRoute: classIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  MainGameIndexRoute: MainGameIndexRoute,
  WeaponIndexRoute: WeaponIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
